-- MySQL Script generated by MySQL Workbench
-- Fri Sep 25 00:10:32 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE =
        'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema library_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema library_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `library_db` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci;
USE `library_db`;

-- -----------------------------------------------------
-- Table `library_db`.`authors`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library_db`.`authors`
(
    `id`   INT         NOT NULL AUTO_INCREMENT,
    `name` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`id`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library_db`.`categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library_db`.`categories`
(
    `id`   INT         NOT NULL AUTO_INCREMENT,
    `name` VARCHAR(45) NOT NULL,
    PRIMARY KEY (`id`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library_db`.`books`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library_db`.`books`
(
    `id`              INT         NOT NULL AUTO_INCREMENT,
    `name`            VARCHAR(45) NOT NULL,
    `delay_penalty`   DOUBLE      NOT NULL,
    `id_categories`   INT         NOT NULL,
    `id_author`       INT         NOT NULL,
    `date_of_release` DATE        NOT NULL,
    PRIMARY KEY (`id`),
    INDEX `id_author_idx` (`id_author` ASC) VISIBLE,
    INDEX `id_categories_idx` (`id_categories` ASC) VISIBLE,
    CONSTRAINT `id_author`
        FOREIGN KEY (`id_author`)
            REFERENCES `library_db`.`authors` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `id_categories`
        FOREIGN KEY (`id_categories`)
            REFERENCES `library_db`.`categories` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library_db`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library_db`.`users`
(
    `id`       INT         NOT NULL AUTO_INCREMENT,
    `name`     VARCHAR(45) NOT NULL,
    `password` VARCHAR(45) NOT NULL,
    `email`    VARCHAR(45) NOT NULL,
    `role` set('admin','librarian','reader') NOT NULL,
    `bill`       DOUBLE      NOT NULL,
    PRIMARY KEY (`id`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `library_db`.`user_book`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `library_db`.`user_book`
(
    `id`          INT  NOT NULL AUTO_INCREMENT,
    `user_id`     INT  NOT NULL,
    `book_id`     INT  NOT NULL,
    `lend_date`   DATE NOT NULL,
    `return_date` DATE NOT NULL,
    PRIMARY KEY (`id`),
    INDEX `user_id_idx` (`user_id` ASC) VISIBLE,
    INDEX `book_id_idx` (`book_id` ASC) VISIBLE,
    CONSTRAINT `user_id`
        FOREIGN KEY (`user_id`)
            REFERENCES `library_db`.`users` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `book_id`
        FOREIGN KEY (`book_id`)
            REFERENCES `library_db`.`books` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
